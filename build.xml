<project name="opennlpPOSTagger" basedir="." default="war" xmlns:ivy="antlib:org.apache.ivy.ant">
    <!--
      opennlpPOSTagger
      Build file for the project opennlpPOSTagger
      Part of DK-CLARIN

      Author: Bart Jongejan

  -->

    <!-- Define Ivy stuff -->
    <property name="ivy.install.version" value="2.0.0" />
    <property name="ivy.jar.dir" value="${basedir}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    <property name="central.repo" value="https://repo1.maven.org/maven2" />
    <property name="jboss.repo" value="https://repository.jboss.org/maven2" />


    <!-- Define folder names -->
    <property name="lib.dir"     value="lib"/>
    <!--property name="globallib.dir"     value="C:\Program Files\JBoss.org\JBoss Web 2.1\lib"/-->
    <!--property name="globallib.dir"     value="WEB-INF\lib"/-->
    <property name="src.dir"     value="src"/>
    <property name="class.dir"   value="classes"/>
    <property name="javadoc.dir" value="javadoc"/>
    <property name="jar.dir"     value="jar"/>
    <property name="war.dir"     value="war"/>
    <property name="web.dir"     value="web-source"/>
    <property name="conf.dir"    value="conf"/>

    <!-- Set Classpath equal to what is needed -->
    <path id="classpath">
        <!--fileset dir="${globallib.dir}"  includes="**/*.jar"/-->
        <fileset dir="${lib.dir}"  includes="**/*.jar"/>
    </path>

    <!-- Set the appropriate environment -->
    <!-- Defaults to dev -->
    <target name="env" depends="is-prod, is-dev"/>

    <!-- if -Dprod=true is used, copy the production conf file to conf dir -->
    <target name="is-prod" if="prod">
        <copy overwrite="true" file="properties_prod.xml" tofile="${conf.dir}/properties.xml"/>
        <delete file="lib/slf4j-log4j12-1.5.8.jar"/>
        <delete file="lib/slf4j-api-1.5.8.jar"/>
    </target>

    <target name="is-dev" if="dev">
        <copy overwrite="true" file="properties_dev.xml" tofile="${conf.dir}/properties.xml"/>
        <delete file="lib/slf4j-log4j12-1.5.8.jar"/>
    </target>

    <target name="is-dev1" if="dev1">
        <copy overwrite="true" file="properties_dev1.xml" tofile="${conf.dir}/properties.xml"/>
        <delete file="lib/slf4j-log4j12-1.5.8.jar"/>
    </target>

    <!-- Delete everything autogenerated, including downloaded libs -->
    <target name="clean-all" depends="clean" description="Delete everything autogenerated, including downloaded libs">
        <delete dir="${lib.dir}" />
        <delete dir="${ivy.jar.dir}" />
    </target>

    <!-- Delete everything autogenerated -->
    <target name="clean" description="Clean the project">
        <delete dir="${class.dir}"/>
        <delete dir="${war.dir}" />
        <delete dir="${jar.dir}"/>
        <delete dir="${javadoc.dir}" />
    </target>

    <!--Compile the module, clean first  -->
    <target name="compile" depends="clean, resolve, env" description="Compiles the whole bundle">
        <mkdir dir="${class.dir}"/>
        <javac srcdir="${src.dir}" destdir="${class.dir}" classpathref="classpath" encoding="utf-8" debuglevel="lines,vars,source" debug="true" >
            <!-- compilerarg value="-Xlint:unchecked"/  -->
        </javac>
    </target>

    <!--Make jar files  -->
    <target name="jar" depends="compile" description="Jar the project">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${class.dir}">
            <manifest>
                <!-- don't write anything in MANIFEST.MF -->
            </manifest>
        </jar>
    </target>

    <!-- Pack as war file -->
    <target name="war" depends="jar" description="Pack to serwlet war">
        <mkdir dir="${war.dir}"/>
        <war destfile="${war.dir}/${ant.project.name}.war" webxml="web.xml">
            <fileset dir="${web.dir}"/>
            <lib dir="${jar.dir}"/>
            <lib dir="${lib.dir}">
                <exclude name="**/servlet.jar"/>
                <exclude name="**/servlet-api.jar"/>
            </lib>
            <classes dir="${conf.dir}"/>
        </war>
    </target>

    <!-- Create javadocs -->
    <target name="javadoc" description="Create Javadocs">
        <mkdir dir="${javadoc.dir}" />
        <javadoc destdir="${javadoc.dir}">
            <fileset dir="${src.dir}/" includes="**/*.java" />
        </javadoc>
    </target>

    <!-- Install Ivy. Only run on first compile -->
    <target name="install-ivy" depends="download-ivy" description="--> install ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
        <ivy:settings file="${conf.dir}/ivy.settings.xml" />
    </target>

    <target name="download-ivy" if="ivy">
        <mkdir dir="${ivy.jar.dir}" />
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <echo message="installing ivy..." />
        <get src="${central.repo}/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <target name="resolve" depends="install-ivy" description="--> retrieve dependencies with ivy" if="ivy">
        <ivy:retrieve />
    </target>

</project>
